{
    "name": "technote/laravel-reservation-management-system",
    "type": "project",
    "license": "GPL-2.0+",
    "description": "Reservation management system",
    "homepage": "https://github.com/technote-space/laravel-reservation-management-system",
    "keywords": [
        "reservation"
    ],
    "authors": [
        {
            "name": "Technote",
            "email": "technote.space@gmail.com",
            "homepage": "https://technote.space"
        }
    ],
    "require": {
        "php": "^7.2",
        "ext-json": "*",
        "ext-mbstring": "*",
        "composer/composer": "^1.9",
        "doctrine/dbal": "^2.10",
        "fideloper/proxy": "^4.2",
        "laravel/framework": "^6.11",
        "laravel/tinker": "^2.1",
        "staudenmeir/eloquent-eager-limit": "^1.4",
        "technote/laravel-crud-helper": "^0.1.4",
        "technote/laravel-search-helper": "^0.1.3"
    },
    "require-dev": {
        "barryvdh/laravel-debugbar": "^3.2",
        "barryvdh/laravel-ide-helper": "^2.6",
        "beyondcode/laravel-dump-server": "^1.3",
        "beyondcode/laravel-query-detector": "^1.1",
        "codedungeon/phpunit-result-printer": "^0.26.2",
        "dealerdirect/phpcodesniffer-composer-installer": "^0.5.0",
        "facade/ignition": "^1.14",
        "fzaninotto/faker": "^1.9",
        "laravel/dusk": "^5.8",
        "mockery/mockery": "^1.3",
        "nunomaduro/collision": "^3.0",
        "phpmd/phpmd": "^2.8",
        "phpunit/phpunit": "^8.5",
        "squizlabs/php_codesniffer": "^3.5"
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "process-timeout": 1200
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/"
        },
        "classmap": [
            "database/seeds",
            "database/factories"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "post-update-cmd": [
            "if [[ -n $(php artisan list --raw | grep 'ide-helper:generate') ]] && [[ -f .env ]]; then composer ide; fi",
            "php artisan optimize --ansi",
            "@cache",
            "php artisan config:cache --ansi"
        ],
        "setup": "bash bin/setup.sh",
        "cache": [
            "php artisan cache:clear --ansi",
            "php artisan config:clear --ansi",
            "php artisan route:clear --ansi",
            "php artisan view:clear --ansi"
        ],
        "prepare": [
            "@prepare:php",
            "@prepare:js"
        ],
        "prepare:php": "php -d memory_limit=2G $(which composer) install --no-interaction --prefer-dist --no-suggest",
        "prepare:js": "yarn install",
        "deploy": "bash bin/deploy.sh",
        "build": [
            "@build:php",
            "@build:js"
        ],
        "build:php": "php -d memory_limit=2G $(which composer) install --no-dev --no-interaction --prefer-dist --no-suggest",
        "build:js": "yarn prod",
        "test": [
            "@stage-lint",
            "@stage-test"
        ],
        "fix": [
            "@eslint:fix",
            "@stylelint:fix",
            "@phpcs:fix"
        ],
        "stage-lint": [
            "@bin:phpcs",
            "@bin:phpmd",
            "@bin:eslint",
            "@bin:stylelint"
        ],
        "stage-test": [
            "@bin:jest",
            "@bin:phpunit",
            "@bin:dusk"
        ],
        "test-php": [
            "@bin:phpcs",
            "@bin:phpmd",
            "@bin:phpunit",
            "@bin:dusk"
        ],
        "test-js": [
            "@bin:eslint",
            "@bin:jest"
        ],
        "test-css": [
            "@bin:stylelint"
        ],
        "phpcs": "phpcs --standard=./phpcs.xml",
        "phpcs:fix": "phpcbf --standard=./phpcs.xml",
        "phpmd": "phpmd ./app/,./config,./database/factories,./database/seeds,./routes/,./tests/ ansi phpmd.xml",
        "phpunit": "phpunit --stop-on-failure --colors=always",
        "phpunit:no": "@phpunit --no-coverage",
        "phpunit:feature": "@phpunit:no --group=Feature",
        "phpunit:api": "@phpunit:no --group=Feature.Api",
        "phpunit:crud": "@phpunit:no --group=Feature.Api.Crud",
        "phpunit:auth": "@phpunit:no --group=Feature.Api.Auth",
        "phpunit:summary": "@phpunit:no --group=Feature.Api.Summary",
        "phpunit:unit": "@phpunit:no --group=Unit",
        "phpunit:models": "@phpunit:no --group=Unit.Models",
        "phpunit:helpers": "@phpunit:no --group=Unit.Helpers",
        "dusk": "php artisan dusk --env=dusk",
        "eslint": "yarn eslint",
        "eslint:fix": "yarn eslint:fix",
        "jest": "yarn cover",
        "jest:update": "yarn test:update",
        "stylelint": "yarn stylelint",
        "stylelint:fix": "yarn stylelint:fix",
        "bin:phpcs": "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/check/phpcs.sh",
        "bin:phpmd": "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/check/phpmd.sh",
        "bin:eslint": "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/check/eslint.sh",
        "bin:stylelint": "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/check/stylelint.sh",
        "bin:jest": "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/test/jest.sh",
        "bin:phpunit": "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/test/phpunit.sh",
        "bin:dusk": "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/test/dusk.sh",
        "m": [
            "@da",
            "@migrate",
            "@seed"
        ],
        "migrate": "php artisan migrate:refresh --ansi",
        "seed": "php artisan db:seed --ansi",
        "da": "composer dump-autoload",
        "ide": [
            "php artisan ide-helper:generate --ansi",
            "php artisan ide-helper:models --write --ansi",
            "php artisan ide-helper:meta --ansi"
        ],
        "packages": [
            "bash bin/upgrade.sh"
        ],
        "gh-prepare": [
            "bash bin/build.sh"
        ],
        "gh-pages": [
            "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} GH_PAGES_DIR=public/gh-pages GH_PAGES_BASE=/gh-pages bash bin/deploy/gh-pages.sh"
        ],
        "gh-pages:ga": [
            "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} GH_PAGES_DIR=public/gh-pages GH_PAGES_BASE=/gh-pages GH_PAGES_TRACKING_ID=TEST bash bin/deploy/gh-pages.sh"
        ],
        "routes": [
            "php artisan route:clear --ansi",
            "php artisan route:list --ansi"
        ],
        "chrome": [
            "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/prepare/install-google-chrome.sh",
            "TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR:-$(cd $(dirname $0); pwd)} bash bin/prepare/install-chrome-driver.sh"
        ]
    }
}
